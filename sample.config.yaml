# Welcome to the sample Bubo config file
# Below you will find various config sections and options
# Default values are shown

# The string to prefix messages with to talk to the bot in group chats
command_prefix: "!bubo"

# Options for connecting to the bot's Matrix account
matrix:
  # The Matrix User ID of the bot account
  user_id: "@bubo:example.com"
  # Token for login will be used if given
  user_token: ""
  # Matrix account password, used if no token given
  user_password: ""
  # The URL of the homeserver to connect to
  homeserver_url: https://example.com
  # The server name of the Matrix server
  server_name: example.com
  # The device ID that is **non pre-existing** device
  # If this device ID already exists, messages will be dropped silently in encrypted rooms
  device_id: ABCDEFGHIJ
  # What to name the logged in device
  device_name: bubo
  # Has Synapse admin?
  # Set to true if Bubo has Synapse admin API access
  is_synapse_admin: false

# Different commands might require a permission.
# Here we list the minimum permission needed for the command.
#
# - "communities" - listing or maintaining communities: coordinator
# - "rooms" - listing or maintaining rooms: coordinator
# - "invite" - invite a user to a room: coordinator
permissions:
  # Users or list of users based on room membership, who are allowed to do anything with the bot.
  # Note currently this is actually just the same as coordinator, but more powerful
  # actions might be added that are admin only.
  # Admins get power 50 in rooms they are joined to
  # if "promote_users" is set to "true".
  # If this is set to a room, the bot must be a member of that room.
  admins:
    - "@admin:example.com"
    - "!qwerty12345:example.com"
  # Users or list of users based on room membership, who are allowed to
  # maintain a limited set of functions.
  # Coordinators get power 50 in rooms they are joined to
  # if "promote_users" is set to "true".
  # If this is set to a room, the bot must be a member of that room.
  coordinators:
    - "@coordinator:example.com"
    - "!asdfgh12345:example.com"
  ### Some configuration
  # Demote users who have too much power in a room
  demote_users: false
  # Promote users who should have more power in a room
  promote_users: true

# Configuration related to user management.
# Currently Keycloak is the only provider.
users:
  keycloak:
    # Set to true to enable keycloak integration
    enabled: false
    # Please note you need to create a client in your keycloak realm, with the following:
    # - client protocol: openid-connect
    # - access type: confidential
    # - service accounts enabled: true
    # - service account roles -> client roles -> realm management: manage-users
    # - service account roles -> client roles -> realm management: query-groups
    # Then copy the credentials client secret here in 'client_secret_key'
    url: "http://keycloak.domain.tld/auth/"
    # Define your realm
    realm_name: "master"
    client_secret_key: "client-secret"
    # If running an instance of https://github.com/elokapina/keycloak-signup
    # you can enable the "invite" command for self-registration.
    keycloak_signup:
      # Set to true to enable self-registration integration
      # NOTE! Requires email sending to be enabled
      enabled: false
      url: "https://keycloak-signup.domain.tld"
      # Secret token to communicate with the keycloak-signup instance
      token: "abcdefg"
      # How many days a self-registration page should be valid
      page_days_valid: 7
      # What organisation name to use in the emails to user
      organisation: Elokapina

# Configuration for rooms maintained by Bubo.
rooms:
  # Default power levels. Bubo will ensure these are set for the rooms
  # it maintains on creation and startup.
  power_levels:
    ban: 50
    events:
      "m.room.avatar": 50
      "m.room.canonical_alias": 50
      "m.room.encryption": 100
      "m.room.history_visibility": 100
      "m.room.name": 50
      "m.room.power_levels": 100
      "m.room.server_acl": 100
      "m.room.tombstone": 100
    events_default: 0
    invite: 0
    kick: 50
    redact: 50
    state_default: 50
    users_default: 0
  # Should bubo enforce the default power levels in old rooms as well?
  enforce_power_in_old_rooms: true
  # Secondary admin to invite to maintained rooms (optional)
  #secondary_admin: "@user:domain.tld"
  # Always recreate rooms in federated mode
  # Useful to set when some rooms have been created as non-federated and the
  # room recreate is used to create new versions in federated mode.
  recreate_as_federated: false
  # Prefix to use when renaming old recreated rooms
  recreate_old_room_name_prefix: "OLD"

# Configuration related to bot callbacks
callbacks:
  # Send a 'unable to decrypt this message' reply to the room if Bubo can't decrypt a message.
  unable_to_decrypt_responses: true

# Email sending configuration
email:
  # Enable first if email sending is required
  enabled: false
  host: smtp.example.com
  port: 465
  # Set either starttls or ssl, not both
  starttls: false
  ssl: false
  sender: noreply@example.com
  auth:
    username: janet
    password: foobar

# Storage related configuration
storage:
  # The path to the database
  database_filepath: "/data/bubo.db"
  # The path to a directory for internal bot storage
  # containing encryption keys, sync tokens, etc.
  store_filepath: "/data"

# Logging setup
logging:
  # Logging level
  # Allowed levels are 'INFO', 'WARNING', 'ERROR', 'DEBUG' where DEBUG is most verbose
  level: INFO
  # Configure logging to a file
  file_logging:
    # Whether logging to a file is enabled
    enabled: false
    # The path to the file to log to. May be relative or absolute
    filepath: bubo.log
  # Configure logging to the console output
  console_logging:
    # Whether logging to the console is enabled
    enabled: true
  matrix_logging:
    # Whether logging to Matrix is enabled.
    # Note! User access token must be specified when using Matrix logging.
    enabled: false
    # Room ID
    room: !logs:example.com

# Discourse integration
discourse:
  # URL to discourse instance
  #url: https://discourse.domain.tld
  # API credentials
  #api_username: username
  #api_key: secretkey
